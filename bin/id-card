#!/usr/bin/env python

import argparse

NAME2ATR = {
    'A': '3BFC180000813180459067464A00641606000000001E',
    'B': '3BFE1800008031FE4553434536302D43443038312D6E46A9',
    'C': '3B7B1800000031C06477E30300839000',
    'D': '3BF81800008031FE450073C8401300900092',
    'E': '3B9F94803FC7A08031E073FA21106300000083F09000BA',
    'F': '3BF81300008131FE454A434F5076323431B7',
    'G': '3B6D000080318065409086015183079000',
    'H': '3BF81800FF8131FE454A434F507632343143',
    'I': '3B7B1800000031C06477E91000019000',
}

ATR2NAME = {v: k for k, v in NAME2ATR.items()}


class CardName(object):
    def __init__(self):
        self.value = None
        self.name2atr = True

        self.parser = argparse.ArgumentParser(
            description='Returns the name or ATR of the card.',
        )
        self.add_options()
        self.parse_options()

    def add_options(self):
        self.parser.add_argument(
            'value',
            help='Either card name or ATR of a card.',
            type=self.validate_value,
        )

    def parse_options(self):
        args = self.parser.parse_args()
        self.value = args.value
        if self.value in NAME2ATR.keys():
            self.name2atr = True
        else:
            self.name2atr = False

    def validate_value(self, value):
        kevs = list(NAME2ATR.keys()) + list(NAME2ATR.values())
        if value not in kevs:
            raise argparse.ArgumentTypeError(
                'Unrecognized value'
            )
        return value

    def run(self):
        if self.name2atr:
            print(NAME2ATR[self.value])
        else:
            print(ATR2NAME[self.value])

if __name__ == '__main__':
    CardName().run()
