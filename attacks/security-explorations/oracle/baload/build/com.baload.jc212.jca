// converted by version 1.2
// on Thu Mar 26 18:21:48 CET 2020

.package com/baload {
	.aid 0xA1:0x0:0x0:0x0:0x0;
	.version 0.0;

	.imports {
		0xA0:0x0:0x0:0x0:0x62:0x1:0x1 1.0;		//javacard/framework
	}

	.applet {
		0xA1:0x0:0x0:0x0:0x0:0x0:0x1 InsBaload;
	}

	.constantPool {
		// 0
		instanceFieldRef byte[] InsBaload/success;
		// 1
		instanceFieldRef byte[] InsBaload/failure;
		// 2
		instanceFieldRef byte[] InsBaload/NOP;
		// 3
		instanceFieldRef short InsBaload/msgLen;
		// 4
		instanceFieldRef byte[] InsBaload/array;
		// 5
		staticMethodRef 0.3.0()V;		// javacard/framework/Applet.<init>()V
		// 6
		classRef InsBaload;
		// 7
		staticMethodRef InsBaload/<init>()V;
		// 8
		virtualMethodRef 0.3.1()V;		// javacard/framework/Applet.register()V
		// 9
		virtualMethodRef 0.3.3()Z;		// javacard/framework/Applet.selectingApplet()Z
		// 10
		virtualMethodRef 0.10.1()[B;		// javacard/framework/APDU.getBuffer()[B
		// 11
		staticMethodRef 0.16.2([BS[BSS)S;		// javacard/framework/Util.arrayCopyNonAtomic([BS[BSS)S
		// 12
		virtualMethodRef 0.10.8(SS)V;		// javacard/framework/APDU.setOutgoingAndSend(SS)V
		// 13
		virtualMethodRef 0.10.6()S;		// javacard/framework/APDU.setIncomingAndReceive()S
		// 14
		staticMethodRef 0.7.1(S)V;		// javacard/framework/ISOException.throwIt(S)V
		// 15
		staticMethodRef 0.16.4([BS)S;		// javacard/framework/Util.getShort([BS)S
	}

	.class public InsBaload 0 extends 0.3 {		// extends javacard/framework/Applet

		.fields {
			 byte[] success 0;		// [B
			 byte[] failure 1;		// [B
			 byte[] NOP 2;		// [B
			 byte[] array 3;		// [B
			 short msgLen 4;		// S
			private static final byte INS_SUCCESS = 1;		// B
			private static final byte INS_FAILURE = 2;		// B
			private static final byte INS_READ = 4;		// B
		}

		.publicMethodTable 7 {
			equals(Ljava/lang/Object;)Z;
			register()V;
			register([BSB)V;
			selectingApplet()Z;
			deselect()V;
			getShareableInterfaceObject(Ljavacard/framework/AID;B)Ljavacard/framework/Shareable;;
			select()Z;
			process(Ljavacard/framework/APDU;)V;
		}

		.packageMethodTable 0 {
		}

		.method public <init>()V 0 {
			.stack 5;
			.locals 0;

				L0:	aload_0;
					invokespecial 5;		// javacard/framework/Applet.<init>()V
					aload_0;
					sconst_4;
					newarray 11;
					dup;
					sconst_0;
					sconst_1;
					bastore;
					dup;
					sconst_1;
					sconst_2;
					bastore;
					dup;
					sconst_2;
					sconst_1;
					bastore;
					dup;
					sconst_3;
					sconst_2;
					bastore;
					putfield_a 0;		// reference com/baload/InsBaload.success
					aload_0;
					sconst_4;
					newarray 11;
					dup;
					sconst_0;
					bspush -128;
					bastore;
					dup;
					sconst_1;
					bspush 64;
					bastore;
					dup;
					sconst_2;
					bspush -128;
					bastore;
					dup;
					sconst_3;
					bspush 64;
					bastore;
					putfield_a 1;		// reference com/baload/InsBaload.failure
					aload_0;
					sconst_0;
					newarray 11;
					putfield_a 2;		// reference com/baload/InsBaload.NOP
					aload_0;
					sconst_4;
					putfield_s 3;		// short com/baload/InsBaload.msgLen
					aload_0;
					sconst_1;
					newarray 11;
					putfield_a 4;		// reference com/baload/InsBaload.array
					return;
		}

		.method public static install([BSB)V 1 {
			.stack 2;
			.locals 0;

				L0:	new 6;		// com/baload/InsBaload
					dup;
					invokespecial 7;		// com/baload/InsBaload.<init>()V
					invokevirtual 8;		// javacard/framework/Applet.register()V
					return;
		}

		.method public process(Ljavacard/framework/APDU;)V 7 {
			.stack 5;
			.locals 4;

			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	aload_0;
					invokevirtual 9;		// javacard/framework/Applet.selectingApplet()Z
					ifeq L2;
				L1:	return;
				L2:	aload_1;
					invokevirtual 10;		// javacard/framework/APDU.getBuffer()[B
					astore_3;
					aload_3;
					sconst_1;
					baload;
					stableswitch L8 1 4 L3 L4 L8 L5;
				L3:	getfield_a_this 0;		// reference com/baload/InsBaload.success
					sconst_0;
					aload_3;
					sconst_0;
					getfield_s_this 3;		// short com/baload/InsBaload.msgLen
					invokestatic 11;		// javacard/framework/Util.arrayCopyNonAtomic([BS[BSS)S
					pop;
					aload_1;
					sconst_0;
					sconst_4;
					invokevirtual 12;		// javacard/framework/APDU.setOutgoingAndSend(SS)V
					goto L9;
				L4:	getfield_a_this 1;		// reference com/baload/InsBaload.failure
					sconst_0;
					aload_3;
					sconst_0;
					getfield_s_this 3;		// short com/baload/InsBaload.msgLen
					invokestatic 11;		// javacard/framework/Util.arrayCopyNonAtomic([BS[BSS)S
					pop;
					aload_1;
					sconst_0;
					sconst_4;
					invokevirtual 12;		// javacard/framework/APDU.setOutgoingAndSend(SS)V
					goto L9;
				L5:	aload_3;
					sconst_4;
					baload;
					sstore 4;
					aload_1;
					invokevirtual 13;		// javacard/framework/APDU.setIncomingAndReceive()S
					s2b;
					sstore 5;
					sload 4;
					sload 5;
					if_scmpeq L7;
				L6:	sspush 26368;
					invokestatic 14;		// javacard/framework/ISOException.throwIt(S)V
				L7:	aload_3;
					sconst_2;
					invokestatic 15;		// javacard/framework/Util.getShort([BS)S
					sstore_2;
					getfield_a_this 0;		// reference com/baload/InsBaload.success
					sconst_0;
					sconst_1;
					bastore;
					getfield_a_this 0;		// reference com/baload/InsBaload.success
					sconst_0;
					getfield_a_this 0;		// reference com/baload/InsBaload.success
					sload_2;
					baload;
					bastore;
					getfield_a_this 0;		// reference com/baload/InsBaload.success
					sconst_0;
					aload_3;
					sconst_0;
					getfield_s_this 3;		// short com/baload/InsBaload.msgLen
					invokestatic 11;		// javacard/framework/Util.arrayCopyNonAtomic([BS[BSS)S
					pop;
					aload_1;
					sconst_0;
					sconst_2;
					invokevirtual 12;		// javacard/framework/APDU.setOutgoingAndSend(SS)V
					goto L9;
				L8:	sspush 27904;
					invokestatic 14;		// javacard/framework/ISOException.throwIt(S)V
				L9:	return;
		}

	}

}
